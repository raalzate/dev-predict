id,title,gherkin,unit_tests,effort,time
STORY-001,Exportar reporte de ventas a PDF,"Feature: Exportar reporte de ventas\nScenario: El administrador exporta un reporte en PDF\nGiven estoy en la página de ""Reportes""\nWhen selecciono el rango de fechas ""mes actual""\nAnd hago clic en el botón ""Exportar a PDF""\nThen el sistema debe descargar un archivo PDF llamado ""reporte_ventas.pdf""","def test_pdf_generation():\n  # Verifica que el archivo se crea\ndef test_report_data_accuracy():\n  # Verifica que los datos del reporte son correctos",8,12
STORY-002,Carga de avatar de perfil a S3,"Feature: Carga de avatar de perfil\nScenario: El usuario sube una imagen válida\nGiven el usuario está en su página de ""Perfil""\nWhen selecciona un archivo de imagen ""avatar.jpg"" (menor a 2MB)\nAnd hace clic en ""Subir""\nThen la imagen de perfil se actualiza","def test_upload_valid_image(client, mock_s3):\n  # Simula subida exitosa\ndef test_upload_image_too_large(client):\n  # Verifica error 413\ndef test_s3_upload_failure_gracefully_handled(client, mock_s3_failure):\n  # Verifica error de S3",13,20
STORY-003,Login de usuario con API externa,"Feature: Autenticación de usuario\nScenario: Usuario se loguea con credenciales válidas\nGiven el usuario está en la página de Login\nWhen ingresa su email y contraseña\nAnd hace clic en ""Ingresar""\nThen es redirigido al Dashboard","def test_valid_login():\n  # Mockea la respuesta de la API de auth\ndef test_invalid_credentials():\n  # Mockea una respuesta 401 de la API",5,8
STORY-004,Implementar paginación en lista de productos,"Feature: Lista de productos\nScenario: Usuario navega a la segunda página\nGiven estoy en la lista de productos\nWhen hago clic en el número de página ""2""\nThen veo los productos del 21 al 40","def test_pagination_displays_correct_items():\n  # Verifica el contenido de la segunda página",3,5
STORY-005,Procesar pago con tarjeta de crédito,"Feature: Checkout\nScenario: Usuario realiza un pago exitoso\nGiven el usuario está en la página de pago\nWhen ingresa los detalles de su tarjeta y hace clic en ""Pagar""\nThen ve un mensaje de ""Pago exitoso""","def test_successful_payment():\n  # Mockea la API de pagos con una respuesta exitosa\ndef test_failed_payment_due_to_insufficient_funds():\n  # Mockea la API con una respuesta de fondos insuficientes",21,35
STORY-006,Filtrar productos por categoría,"Feature: Lista de productos\nScenario: Usuario filtra por categoría ""Electrónica""\nGiven estoy en la lista de productos\nWhen selecciono el filtro de categoría ""Electrónica""\nThen solo veo productos de esa categoría","def test_category_filter_works():\n  # Verifica que los productos mostrados pertenecen a la categoría seleccionada",5,6
STORY-007,Añadir producto al carrito,"Feature: Detalle de producto\nScenario: Usuario añade un producto al carrito\nGiven estoy en la página de un producto\nWhen hago clic en ""Añadir al carrito""\nThen el contador del carrito se incrementa en 1","def test_add_to_cart_updates_counter():\n  # Verifica el cambio en el UI del carrito",2,3
STORY-008,Registro de nuevo usuario,"Feature: Registro\nScenario: Un visitante se registra con datos válidos\nGiven estoy en la página de registro\nWhen completo el formulario con datos válidos y hago clic en ""Registrar""\nThen soy redirigido a mi nuevo Dashboard","def test_successful_registration():\n  # Verifica la creación del usuario en la base de datos\ndef test_registration_with_existing_email():\n  # Verifica que se muestra un error si el email ya existe",8,10
STORY-009,Exportar datos de usuario a CSV,"Feature: Perfil de administrador\nScenario: Admin exporta usuarios\nGiven soy un administrador en el panel de usuarios\nWhen hago clic en ""Exportar a CSV""\nThen se descarga un archivo ""usuarios.csv""","def test_csv_export_file_creation():\n  # Verifica que el archivo CSV es generado",5,9
STORY-010,Integración con API de mapas para geolocalización,"Feature: Búsqueda de tiendas\nScenario: Usuario ve tiendas cercanas en un mapa\nGiven estoy en la página de búsqueda de tiendas\nWhen el sistema obtiene mi ubicación\nThen veo un mapa con pines de las tiendas cercanas","def test_map_initialization():\n  # Mockea la API de geolocalización\ndef test_nearby_stores_are_displayed():\n  # Verifica que los pines se renderizan en el mapa",13,22
STORY-011,Recuperación de contraseña,"Feature: Autenticación\nScenario: Usuario solicita restablecer su contraseña\nGiven estoy en la página de login\nWhen hago clic en ""Olvidé mi contraseña"" e ingreso mi email\nThen recibo un correo con un enlace de restablecimiento","def test_password_reset_email_sent():\n  # Verifica que el correo se envía\ndef test_invalid_email_for_reset():\n  # Verifica error para email no registrado",8,12
STORY-012,Agregar comentarios a un producto,"Feature: Detalle de producto\nScenario: Usuario agrega un comentario\nGiven estoy en la página de un producto\nWhen escribo un comentario y hago clic en ""Enviar""\nThen el comentario aparece en la lista de comentarios","def test_comment_added_to_product():\n  # Verifica que el comentario se guarda\ndef test_empty_comment_validation():\n  # Verifica error si el comentario está vacío",5,7
STORY-013,Notificaciones push para nuevos pedidos,"Feature: Notificaciones\nScenario: Admin recibe notificación de nuevo pedido\nGiven un usuario realiza un pedido\nWhen el pedido se confirma\nThen el administrador recibe una notificación push","def test_push_notification_sent():\n  # Mockea el envío de la notificación\ndef test_notification_content():\n  # Verifica que el contenido es correcto",13,20
STORY-014,Filtrar reportes por fecha,"Feature: Reportes\nScenario: Admin filtra reportes por rango de fechas\nGiven estoy en la página de reportes\nWhen selecciono un rango de fechas personalizado\nThen veo solo los datos del rango seleccionado","def test_date_filter_applied():\n  # Verifica que los datos filtrados son correctos",5,8
STORY-015,Eliminar producto del carrito,"Feature: Carrito\nScenario: Usuario elimina un producto del carrito\nGiven estoy en la página del carrito\nWhen hago clic en ""Eliminar"" en un producto\nThen el producto desaparece del carrito y el total se actualiza","def test_remove_product_from_cart():\n  # Verifica que el producto se elimina\ndef test_cart_total_updated():\n  # Verifica que el total se recalcula",3,5
STORY-016,Editar perfil de usuario,"Feature: Perfil\nScenario: Usuario edita sus datos personales\nGiven estoy en mi página de perfil\nWhen modifico mi nombre y guardo cambios\nThen los cambios se reflejan en el perfil","def test_profile_update_success():\n  # Verifica actualización en BD\ndef test_profile_update_validation():\n  # Verifica errores de validación",5,8
STORY-017,Ver historial de pedidos,"Feature: Dashboard de usuario\nScenario: Usuario ve sus pedidos anteriores\nGiven estoy en mi dashboard\nWhen navego a ""Historial de pedidos""\nThen veo la lista de pedidos con detalles","def test_load_order_history():\n  # Verifica carga de pedidos\ndef test_order_details_display():\n  # Verifica detalles del pedido",8,12
STORY-018,Aplicar cupón de descuento,"Feature: Checkout\nScenario: Usuario aplica un cupón válido\nGiven estoy en el checkout\nWhen ingreso el código del cupón\nThen el total se actualiza con el descuento","def test_apply_coupon_valid():\n  # Verifica descuento aplicado\ndef test_apply_coupon_invalid():\n  # Verifica error para cupón inválido",5,7
STORY-019,Gestionar inventario de productos,"Feature: Panel admin\nScenario: Admin actualiza stock de producto\nGiven soy admin en panel de productos\nWhen modifico el stock de un producto\nThen el stock se actualiza en la BD","def test_update_stock_success():\n  # Verifica actualización\ndef test_low_stock_alert():\n  # Verifica alerta de stock bajo",8,10
STORY-020,Búsqueda de productos por nombre,"Feature: Lista de productos\nScenario: Usuario busca un producto\nGiven estoy en la lista de productos\nWhen ingreso ""laptop"" en la barra de búsqueda\nThen veo productos que coincidan","def test_search_returns_results():\n  # Verifica resultados de búsqueda\ndef test_search_no_results():\n  # Verifica mensaje sin resultados",5,6
STORY-021,Enviar email de confirmación de pedido,"Feature: Checkout\nScenario: Usuario recibe email post-pago\nGiven el pago es exitoso\nWhen el sistema procesa el pedido\nThen se envía email de confirmación","def test_send_confirmation_email():\n  # Mockea envío de email\ndef test_email_content_correct():\n  # Verifica contenido del email",8,12
STORY-022,Asignar rol de administrador a usuario,"Feature: Gestión de usuarios\nScenario: Admin asigna rol a usuario\nGiven soy admin en panel de usuarios\nWhen asigno rol ""admin"" a un usuario\nThen el usuario gana permisos de admin","def test_assign_admin_role():\n  # Verifica cambio de rol\ndef test_role_permissions():\n  # Verifica permisos aplicados",8,10
STORY-023,Generar reporte de inventario,"Feature: Reportes admin\nScenario: Admin genera reporte de stock\nGiven estoy en reportes\nWhen selecciono ""Reporte de inventario""\nThen se descarga archivo con stock actual","def test_inventory_report_generation():\n  # Verifica generación\ndef test_report_accuracy():\n  # Verifica datos correctos",5,9
STORY-024,Integración con Stripe para pagos,"Feature: Pagos\nScenario: Usuario paga con Stripe\nGiven estoy en checkout\nWhen selecciono Stripe y pago\nThen el pago es procesado y confirmado","def test_stripe_payment_success():\n  # Mockea Stripe success\ndef test_stripe_payment_failure():\n  # Mockea failure",13,20
STORY-025,Validación de edad para compras,"Feature: Checkout\nScenario: Usuario menor de edad no compra\nGiven usuario ingresa fecha de nacimiento\nWhen es menor de 18\nThen se bloquea el checkout","def test_age_validation_under18():\n  # Verifica bloqueo\ndef test_age_validation_over18():\n  # Verifica permiso",5,7
STORY-026,Actualizar contraseña de usuario,"Feature: Perfil\nScenario: Usuario cambia contraseña\nGiven en perfil, sección seguridad\nWhen ingresa nueva contraseña y confirma\nThen contraseña se actualiza","def test_change_password_success():\n  # Verifica hash nuevo\ndef test_password_strength_validation():\n  # Verifica fortaleza",5,8
STORY-027,Paginación en lista de usuarios admin,"Feature: Panel admin\nScenario: Admin navega páginas de usuarios\nGiven en panel de usuarios\nWhen clico página 2\nThen veo usuarios 11-20","def test_user_list_pagination():\n  # Verifica items correctos",3,5
STORY-028,Subir múltiples imágenes para producto,"Feature: Admin productos\nScenario: Admin sube galería de imágenes\nGiven en edición de producto\nWhen subo varias imágenes válidas\nThen las imágenes se asocian al producto","def test_multiple_image_upload():\n  # Verifica subida exitosa\ndef test_image_size_validation():\n  # Verifica error por tamaño",8,12
STORY-029,Notificación de stock bajo,"Feature: Inventario\nScenario: Admin recibe alerta de stock bajo\nGiven el stock de un producto cae por debajo de 5\nWhen el sistema detecta el cambio\nThen se envía una notificación al admin","def test_low_stock_notification_sent():\n  # Mockea notificación\ndef test_notification_content():\n  # Verifica contenido",8,10
STORY-030,Filtrar usuarios por rol,"Feature: Panel admin\nScenario: Admin filtra usuarios por rol\nGiven en panel de usuarios\nWhen selecciono filtro ""admin""\nThen veo solo usuarios con rol admin","def test_role_filter_applied():\n  # Verifica filtro correcto",5,6
STORY-031,Integración con PayPal para pagos,"Feature: Pagos\nScenario: Usuario paga con PayPal\nGiven estoy en checkout\nWhen selecciono PayPal y completo pago\nThen el pago es confirmado","def test_paypal_payment_success():\n  # Mockea PayPal success\ndef test_paypal_payment_failure():\n  # Mockea failure",13,20
STORY-032,Reseñas de productos,"Feature: Detalle de producto\nScenario: Usuario deja una reseña\nGiven estoy en página de producto\nWhen envío reseña con calificación\nThen la reseña aparece en la página","def test_add_review_success():\n  # Verifica reseña guardada\ndef test_review_validation():\n  # Verifica error si reseña vacía",5,7
STORY-033,Exportar pedidos a Excel,"Feature: Reportes\nScenario: Admin exporta pedidos\nGiven en panel de reportes\nWhen clico ""Exportar a Excel""\nThen se descarga archivo ""pedidos.xlsx""","def test_excel_export_generation():\n  # Verifica archivo generado\ndef test_excel_data_accuracy():\n  # Verifica datos correctos",8,12
STORY-034,Autenticación con Google,"Feature: Autenticación\nScenario: Usuario inicia sesión con Google\nGiven en página de login\nWhen selecciono ""Iniciar con Google""\nThen se autentica y redirige al dashboard","def test_google_login_success():\n  # Mockea API Google\ndef test_google_login_failure():\n  # Mockea error de autenticación",13,18
STORY-035,Ver detalles de un pedido,"Feature: Dashboard usuario\nScenario: Usuario ve detalles de pedido\nGiven en historial de pedidos\nWhen clico en un pedido\nThen veo detalles completos del pedido","def test_order_details_load():\n  # Verifica carga de detalles\ndef test_order_details_accuracy():\n  # Verifica datos correctos",3,5
STORY-036,Agregar producto a lista de deseos,"Feature: Lista de deseos\nScenario: Usuario agrega producto\nGiven en página de producto\nWhen clico ""Añadir a lista de deseos""\nThen el producto aparece en mi lista","def test_add_to_wishlist():\n  # Verifica adición\ndef test_wishlist_counter_update():\n  # Verifica contador",3,4
STORY-037,Notificaciones por email de nuevos productos,"Feature: Notificaciones\nScenario: Usuario recibe email de nuevos productos\nGiven estoy suscrito a notificaciones\nWhen se agrega un nuevo producto\nThen recibo un email con detalles","def test_new_product_email_sent():\n  # Mockea envío de email\ndef test_email_content():\n  # Verifica contenido",8,10
STORY-038,Bloquear cuenta de usuario,"Feature: Gestión usuarios\nScenario: Admin bloquea usuario\nGiven en panel de usuarios\nWhen marco usuario como bloqueado\nThen el usuario no puede iniciar sesión","def test_block_user_success():\n  # Verifica bloqueo\ndef test_blocked_user_login():\n  # Verifica error al login",5,7
STORY-039,Filtrar productos por precio,"Feature: Lista de productos\nScenario: Usuario filtra por rango de precio\nGiven en lista de productos\nWhen selecciono rango ""$50-$100""\nThen veo productos en ese rango","def test_price_filter_applied():\n  # Verifica productos filtrados",5,6
STORY-040,Integración con API de mensajería,"Feature: Notificaciones\nScenario: Admin recibe notificación en Slack\nGiven un evento crítico ocurre\nWhen el sistema envía notificación\nThen se envía mensaje a canal de Slack","def test_slack_notification_sent():\n  # Mockea API Slack\ndef test_slack_message_content():\n  # Verifica contenido",13,18
STORY-041,Validación de formato de email,"Feature: Registro\nScenario: Usuario ingresa email inválido\nGiven en página de registro\nWhen ingreso email inválido\nThen veo mensaje de error","def test_invalid_email_validation():\n  # Verifica error\ndef test_valid_email_submission():\n  # Verifica éxito",3,4
STORY-042,Eliminar cuenta de usuario,"Feature: Perfil\nScenario: Usuario elimina su cuenta\nGiven en configuración de perfil\nWhen selecciono ""Eliminar cuenta""\nThen la cuenta se marca como eliminada","def test_delete_account_success():\n  # Verifica eliminación\ndef test_delete_account_confirmation():\n  # Verifica confirmación requerida",8,10
STORY-043,Generar gráfico de ventas,"Feature: Reportes\nScenario: Admin ve gráfico de ventas\nGiven en panel de reportes\nWhen selecciono ""Gráfico de ventas""\nThen veo gráfico con datos de ventas","def test_sales_chart_render():\n  # Verifica renderizado\ndef test_chart_data_accuracy():\n  # Verifica datos",8,12
STORY-044,Autocompletado en búsqueda de productos,"Feature: Búsqueda\nScenario: Usuario usa autocompletado\nGiven en barra de búsqueda\nWhen escribo ""lap""\nThen veo sugerencias como ""laptop""","def test_autocomplete_suggestions():\n  # Verifica sugerencias\ndef test_autocomplete_no_results():\n  # Verifica sin resultados",5,7
STORY-045,Agregar dirección de envío,"Feature: Perfil\nScenario: Usuario agrega dirección\nGiven en sección de direcciones\nWhen ingreso datos válidos\nThen la dirección se guarda","def test_add_address_success():\n  # Verifica guardado\ndef test_address_validation():\n  # Verifica datos inválidos",5,8
STORY-046,Cambiar idioma de la aplicación,"Feature: Configuración\nScenario: Usuario cambia el idioma\nGiven estoy en la configuración de la aplicación\nWhen selecciono el idioma ""Español""\nThen la interfaz se actualiza al idioma seleccionado","def test_language_change_success():\n  # Verifica cambio de idioma en UI\ndef test_language_persistence():\n  # Verifica que el idioma se guarda",5,8
STORY-047,Ver estadísticas de visitas a producto,"Feature: Panel admin\nScenario: Admin ve estadísticas de producto\nGiven estoy en el panel de productos\nWhen selecciono ""Estadísticas"" de un producto\nThen veo gráfico de visitas por día","def test_product_stats_load():\n  # Verifica carga de estadísticas\ndef test_stats_data_accuracy():\n  # Verifica datos correctos",8,12
STORY-048,Agregar método de pago guardado,"Feature: Perfil\nScenario: Usuario guarda tarjeta de crédito\nGiven estoy en la sección de métodos de pago\nWhen ingreso datos válidos de tarjeta\nThen la tarjeta se guarda para pagos futuros","def test_save_payment_method():\n  # Verifica guardado en BD\ndef test_invalid_card_validation():\n  # Verifica error para datos inválidos",8,10
STORY-049,Filtrar pedidos por estado,"Feature: Historial de pedidos\nScenario: Usuario filtra pedidos por estado\nGiven estoy en el historial de pedidos\nWhen selecciono filtro ""Enviado""\nThen veo solo pedidos con estado enviado","def test_order_status_filter():\n  # Verifica filtro aplicado\ndef test_empty_filter_results():\n  # Verifica mensaje si no hay resultados",5,6
STORY-050,Integración con API de envío,"Feature: Checkout\nScenario: Sistema calcula costo de envío\nGiven estoy en checkout\nWhen ingreso dirección de envío\nThen veo costo de envío calculado por API","def test_shipping_cost_calculation():\n  # Mockea API de envío\ndef test_shipping_api_failure():\n  # Verifica manejo de error",13,20
STORY-051,Eliminar comentario de producto,"Feature: Detalle de producto\nScenario: Usuario elimina su comentario\nGiven estoy en página de producto\nWhen elimino mi comentario\nThen el comentario desaparece de la lista","def test_delete_comment_success():\n  # Verifica eliminación\ndef test_delete_unauthorized_comment():\n  # Verifica error si no es propietario",5,7
STORY-052,Notificación SMS de confirmación de pedido,"Feature: Notificaciones\nScenario: Usuario recibe SMS tras pago\nGiven el pago es exitoso\nWhen el sistema procesa el pedido\nThen recibo un SMS de confirmación","def test_sms_notification_sent():\n  # Mockea envío de SMS\ndef test_sms_content():\n  # Verifica contenido del mensaje",8,12
STORY-053,Exportar estadísticas a JSON,"Feature: Reportes admin\nScenario: Admin exporta estadísticas\nGiven estoy en panel de reportes\nWhen selecciono ""Exportar a JSON""\nThen se descarga archivo ""estadisticas.json""","def test_json_export_generation():\n  # Verifica archivo generado\ndef test_json_data_accuracy():\n  # Verifica datos correctos",5,9
STORY-054,Autenticación con Facebook,"Feature: Autenticación\nScenario: Usuario inicia sesión con Facebook\nGiven estoy en página de login\nWhen selecciono ""Iniciar con Facebook""\nThen se autentica y redirige al dashboard","def test_facebook_login_success():\n  # Mockea API Facebook\ndef test_facebook_login_failure():\n  # Mockea error de autenticación",13,18
STORY-055,Ver recomendaciones de productos,"Feature: Lista de productos\nScenario: Usuario ve productos recomendados\nGiven estoy en la página principal\nWhen navego a sección ""Recomendados""\nThen veo productos basados en mi historial","def test_recommendations_load():\n  # Verifica carga de recomendaciones\ndef test_recommendation_accuracy():\n  # Verifica relevancia de productos",8,12
STORY-056,Agregar producto a comparación,"Feature: Comparación de productos\nScenario: Usuario compara productos\nGiven estoy en página de producto\nWhen clico ""Agregar a comparación""\nThen el producto se agrega a la lista de comparación","def test_add_to_comparison():\n  # Verifica adición\ndef test_comparison_limit():\n  # Verifica límite de productos",3,5
STORY-057,Notificación de reembolso procesado,"Feature: Notificaciones\nScenario: Usuario recibe notificación de reembolso\nGiven se procesa un reembolso\nWhen el sistema confirma el reembolso\nThen recibo una notificación por email","def test_refunded_notification_sent():\n  # Mockea envío de email\ndef test_notification_content():\n  # Verifica contenido",8,10
STORY-058,Desactivar cuenta de usuario,"Feature: Gestión usuarios\nScenario: Admin desactiva cuenta\nGiven en panel de usuarios\nWhen marco usuario como desactivado\nThen el usuario no puede iniciar sesión","def test_deactivate_user_success():\n  # Verifica desactivación\ndef test_deactivated_user_login():\n  # Verifica error al login",5,7
STORY-059,Filtrar productos por disponibilidad,"Feature: Lista de productos\nScenario: Usuario filtra por disponibilidad\nGiven estoy en lista de productos\nWhen selecciono ""En stock""\nThen veo solo productos disponibles","def test_availability_filter_applied():\n  # Verifica filtro aplicado",5,6
STORY-060,Integración con API de reseñas externas,"Feature: Detalle de producto\nScenario: Mostrar reseñas externas\nGiven estoy en página de producto\nWhen el sistema consulta API de reseñas\nThen veo reseñas externas en la página","def test_external_reviews_load():\n  # Mockea API de reseñas\ndef test_reviews_api_failure():\n  # Verifica manejo de error",13,18
STORY-061,Validación de dirección de envío,"Feature: Checkout\nScenario: Usuario ingresa dirección inválida\nGiven estoy en checkout\nWhen ingreso dirección incompleta\nThen veo mensaje de error","def test_invalid_address_validation():\n  # Verifica error\ndef test_valid_address_submission():\n  # Verifica éxito",3,4
STORY-062,Cambiar estado de pedido,"Feature: Panel admin\nScenario: Admin actualiza estado de pedido\nGiven estoy en panel de pedidos\nWhen cambio estado a ""Entregado""\nThen el estado se actualiza en BD","def test_update_order_status():\n  # Verifica cambio de estado\ndef test_status_notification():\n  # Verifica notificación al usuario",8,10
STORY-063,Generar factura en PDF,"Feature: Checkout\nScenario: Usuario descarga factura\nGiven el pago es exitoso\nWhen clico ""Descargar factura""\nThen se descarga archivo ""factura.pdf""","def test_invoice_pdf_generation():\n  # Verifica archivo generado\ndef test_invoice_data_accuracy():\n  # Verifica datos correctos",8,12
STORY-064,Autocompletado en búsqueda de usuarios,"Feature: Panel admin\nScenario: Admin usa autocompletado\nGiven en panel de usuarios\nWhen escribo ""joh"" en búsqueda\nThen veo sugerencias como ""John""","def test_user_autocomplete_suggestions():\n  # Verifica sugerencias\ndef test_autocomplete_no_results():\n  # Verifica sin resultados",5,7
STORY-065,Agregar cupón a campaña promocional,"Feature: Panel admin\nScenario: Admin crea cupón promocional\nGiven estoy en panel de promociones\nWhen ingreso datos de cupón\nThen el cupón se guarda y activa","def test_create_coupon_success():\n  # Verifica creación\ndef test_coupon_validation():\n  # Verifica datos inválidos",8,10
STORY-066,Ver historial de pagos,"Feature: Perfil\nScenario: Usuario ve historial de pagos\nGiven estoy en sección de pagos\nWhen navego a ""Historial""\nThen veo lista de pagos realizados","def test_payment_history_load():\n  # Verifica carga de historial\ndef test_payment_details_accuracy():\n  # Verifica datos correctos",5,8
STORY-067,Notificación de cambio de precio,"Feature: Notificaciones\nScenario: Usuario recibe alerta de precio\nGiven estoy suscrito a producto\nWhen el precio cambia\nThen recibo notificación por email","def test_price_change_notification():\n  # Mockea envío de email\ndef test_notification_content():\n  # Verifica contenido",8,10
STORY-068,Proteger formulario contra CSRF,"Feature: Seguridad\nScenario: Formulario protegido contra CSRF\nGiven estoy en un formulario\nWhen envío datos sin token CSRF\nThen recibo error de seguridad","def test_csrf_protection():\n  # Verifica rechazo sin token\ndef test_valid_csrf_submission():\n  # Verifica éxito con token",5,7
STORY-069,Filtrar reportes por usuario,"Feature: Reportes admin\nScenario: Admin filtra reportes por usuario\nGiven estoy en panel de reportes\nWhen selecciono un usuario\nThen veo reportes asociados al usuario","def test_user_report_filter():\n  # Verifica filtro aplicado",5,6
STORY-070,Integración con API de análisis,"Feature: Estadísticas\nScenario: Admin ve análisis de uso\nGiven estoy en panel de estadísticas\nWhen consulto API de análisis\nThen veo métricas de uso en dashboard","def test_analytics_api_load():\n  # Mockea API de análisis\ndef test_analytics_failure_handling():\n  # Verifica manejo de error",13,18
STORY-071,Validación de cupón en checkout,"Feature: Checkout\nScenario: Sistema valida cupón\nGiven estoy en checkout\nWhen ingreso cupón vencido\nThen veo mensaje de error","def test_expired_coupon_validation():\n  # Verifica error\ndef test_valid_coupon_application():\n  # Verifica éxito",3,4
STORY-072,Eliminar dirección de envío,"Feature: Perfil\nScenario: Usuario elimina dirección\nGiven estoy en sección de direcciones\nWhen elimino una dirección\nThen la dirección desaparece de la lista","def test_delete_address_success():\n  # Verifica eliminación\ndef test_delete_address_validation():\n  # Verifica dirección no eliminable",5,7
STORY-073,Generar reporte de usuarios activos,"Feature: Reportes admin\nScenario: Admin genera reporte de usuarios\nGiven estoy en panel de reportes\nWhen selecciono ""Usuarios activos""\nThen se descarga archivo ""usuarios_activos.csv""","def test_active_users_report():\n  # Verifica archivo generado\ndef test_report_data_accuracy():\n  # Verifica datos correctos",5,9
STORY-074,Agregar producto a categoría,"Feature: Panel admin\nScenario: Admin asigna categoría a producto\nGiven estoy en edición de producto\nWhen selecciono categoría ""Electrónica""\nThen el producto se asocia a la categoría","def test_assign_category_success():\n  # Verifica asignación\ndef test_category_validation():\n  # Verifica categoría inválida",5,6
STORY-075,Notificación de cuenta comprometida,"Feature: Seguridad\nScenario: Sistema detecta login sospechoso\nGiven detecto actividad sospechosa\nWhen el sistema procesa la alerta\nThen el usuario recibe notificación por email","def test_security_notification_sent():\n  # Mockea envío de email\ndef test_notification_content():\n  # Verifica contenido",8,10
STORY-076,Importar productos desde CSV,"Feature: Gestión de productos\nScenario: Admin importa productos desde archivo\nGiven estoy en el panel de productos\nWhen subo un archivo CSV válido\nThen los productos se añaden a la base de datos","def test_import_products_success():\n  # Verifica importación exitosa\ndef test_invalid_csv_format():\n  # Verifica error por formato inválido",8,12
STORY-077,Ver notificaciones en la aplicación,"Feature: Notificaciones\nScenario: Usuario ve notificaciones internas\nGiven estoy en la aplicación\nWhen abro el panel de notificaciones\nThen veo lista de notificaciones recientes","def test_notifications_load():\n  # Verifica carga de notificaciones\ndef test_notification_read_status():\n  # Verifica estado de leído",5,7
STORY-078,Integración con API de clima,"Feature: Personalización\nScenario: Mostrar clima en dashboard\nGiven estoy en el dashboard\nWhen el sistema consulta la API de clima\nThen veo el clima actual en mi ubicación","def test_weather_api_load():\n  # Mockea API de clima\ndef test_weather_api_failure():\n  # Verifica manejo de error",13,18
STORY-079,Validación de stock en checkout,"Feature: Checkout\nScenario: Sistema valida stock antes de pagar\nGiven estoy en checkout con productos\nWhen el stock es insuficiente\nThen veo mensaje de error","def test_stock_validation_checkout():\n  # Verifica error por stock\ndef test_sufficient_stock_checkout():\n  # Verifica éxito",5,6
STORY-080,Generar código QR para producto,"Feature: Detalle de producto\nScenario: Admin genera QR para producto\nGiven estoy en edición de producto\nWhen selecciono ""Generar QR""\nThen se descarga un código QR con enlace al producto","def test_qr_code_generation():\n  # Verifica generación de QR\ndef test_qr_code_link_accuracy():\n  # Verifica enlace correcto",8,10
STORY-081,Filtrar comentarios por calificación,"Feature: Detalle de producto\nScenario: Usuario filtra comentarios por estrellas\nGiven estoy en página de producto\nWhen selecciono filtro ""5 estrellas""\nThen veo solo comentarios con 5 estrellas","def test_rating_filter_comments():\n  # Verifica filtro aplicado\ndef test_empty_rating_filter():\n  # Verifica mensaje sin resultados",5,6
STORY-082,Notificación push de oferta especial,"Feature: Notificaciones\nScenario: Usuario recibe oferta especial\nGiven estoy suscrito a ofertas\nWhen se crea una oferta especial\nThen recibo notificación push","def test_offer_push_notification():\n  # Mockea envío de notificación\ndef test_notification_content():\n  # Verifica contenido",8,10
STORY-083,Exportar historial de pagos a PDF,"Feature: Reportes usuario\nScenario: Usuario exporta historial de pagos\nGiven estoy en historial de pagos\nWhen clico ""Exportar a PDF""\nThen se descarga archivo ""pagos.pdf""","def test_payment_history_pdf_export():\n  # Verifica archivo generado\ndef test_pdf_data_accuracy():\n  # Verifica datos correctos",5,9
STORY-084,Autenticación con Apple ID,"Feature: Autenticación\nScenario: Usuario inicia sesión con Apple ID\nGiven estoy en página de login\nWhen selecciono ""Iniciar con Apple""\nThen se autentica y redirige al dashboard","def test_apple_login_success():\n  # Mockea API Apple\ndef test_apple_login_failure():\n  # Mockea error de autenticación",13,18
STORY-085,Ver productos más vendidos,"Feature: Lista de productos\nScenario: Usuario ve productos populares\nGiven estoy en la página principal\nWhen navego a ""Más vendidos""\nThen veo lista de productos más vendidos","def test_top_sellers_load():\n  # Verifica carga de productos\ndef test_top_sellers_accuracy():\n  # Verifica datos correctos",5,7
STORY-086,Agregar producto a favoritos,"Feature: Favoritos\nScenario: Usuario marca producto como favorito\nGiven estoy en página de producto\nWhen clico ""Añadir a favoritos""\nThen el producto aparece en mis favoritos","def test_add_to_favorites():\n  # Verifica adición\ndef test_favorites_counter_update():\n  # Verifica contador",3,4
STORY-087,Notificación de entrega programada,"Feature: Notificaciones\nScenario: Usuario recibe alerta de entrega\nGiven mi pedido está en tránsito\nWhen se programa la entrega\nThen recibo notificación por email","def test_delivery_notification_sent():\n  # Mockea envío de email\ndef test_notification_content():\n  # Verifica contenido",8,10
STORY-088,Restringir acceso por rol,"Feature: Seguridad\nScenario: Sistema restringe acceso por rol\nGiven estoy autenticado\nWhen intento acceder a página de admin\nThen veo error si no tengo rol admin","def test_role_based_access():\n  # Verifica restricción\ndef test_admin_access_success():\n  # Verifica acceso permitido",5,7
STORY-089,Filtrar productos por marca,"Feature: Lista de productos\nScenario: Usuario filtra por marca\nGiven estoy en lista de productos\nWhen selecciono marca ""Samsung""\nThen veo solo productos de esa marca","def test_brand_filter_applied():\n  # Verifica filtro aplicado",5,6
STORY-090,Integración con API de chat en vivo,"Feature: Soporte\nScenario: Usuario inicia chat en vivo\nGiven estoy en página de soporte\nWhen clico ""Iniciar chat""\nThen se abre ventana de chat conectada a API","def test_chat_api_initialization():\n  # Mockea API de chat\ndef test_chat_connection_failure():\n  # Verifica manejo de error",13,18
STORY-091,Validación de código promocional,"Feature: Checkout\nScenario: Sistema valida código promocional\nGiven estoy en checkout\nWhen ingreso código inválido\nThen veo mensaje de error","def test_invalid_promo_code():\n  # Verifica error\ndef test_valid_promo_code():\n  # Verifica éxito",3,4
STORY-092,Eliminar producto de favoritos,"Feature: Favoritos\nScenario: Usuario elimina producto de favoritos\nGiven estoy en lista de favoritos\nWhen elimino un producto\nThen el producto desaparece de la lista","def test_remove_from_favorites():\n  # Verifica eliminación\ndef test_favorites_counter_update():\n  # Verifica contador",3,4
STORY-093,Generar reporte de carritos abandonados,"Feature: Reportes admin\nScenario: Admin ve carritos abandonados\nGiven estoy en panel de reportes\nWhen selecciono ""Carritos abandonados""\nThen se descarga archivo ""carritos_abandonados.csv""","def test_abandoned_cart_report():\n  # Verifica archivo generado\ndef test_report_data_accuracy():\n  # Verifica datos correctos",8,12
STORY-094,Agregar etiqueta a producto,"Feature: Panel admin\nScenario: Admin asigna etiqueta a producto\nGiven estoy en edición de producto\nWhen añado etiqueta ""Oferta""\nThen la etiqueta se asocia al producto","def test_add_tag_success():\n  # Verifica asignación\ndef test_tag_validation():\n  # Verifica etiqueta inválida",5,6
STORY-095,Notificación de cuenta reactivada,"Feature: Gestión usuarios\nScenario: Usuario recibe alerta de reactivación\nGiven mi cuenta está desactivada\nWhen admin reactiva mi cuenta\nThen recibo notificación por email","def test_reactivation_notification_sent():\n  # Mockea envío de email\ndef test_notification_content():\n  # Verifica contenido",8,10
STORY-096,Importar usuarios desde CSV,"Feature: Gestión usuarios\nScenario: Admin importa usuarios desde archivo\nGiven estoy en panel de usuarios\nWhen subo un archivo CSV válido\nThen los usuarios se añaden a la base de datos","def test_import_users_success():\n  # Verifica importación exitosa\ndef test_invalid_user_csv():\n  # Verifica error por formato",8,12
STORY-097,Ver historial de cambios de producto,"Feature: Panel admin\nScenario: Admin ve cambios de producto\nGiven estoy en edición de producto\nWhen selecciono ""Historial de cambios""\nThen veo lista de modificaciones","def test_product_history_load():\n  # Verifica carga de historial\ndef test_history_accuracy():\n  # Verifica datos correctos",5,8
STORY-098,Proteger API contra abuso,"Feature: Seguridad\nScenario: Sistema limita solicitudes a API\nGiven envío múltiples solicitudes rápidas\nWhen excedo el límite\nThen recibo error 429","def test_rate_limit_enforcement():\n  # Verifica límite de solicitudes\ndef test_valid_api_requests():\n  # Verifica éxito dentro de límite",8,10
STORY-099,Filtrar pedidos por fecha,"Feature: Historial de pedidos\nScenario: Usuario filtra pedidos por fecha\nGiven estoy en historial de pedidos\nWhen selecciono rango de fechas\nThen veo pedidos en ese rango","def test_date_filter_orders():\n  # Verifica filtro aplicado\ndef test_empty_date_filter():\n  # Verifica mensaje sin resultados",5,6
STORY-100,Integración con API de reseñas sociales,"Feature: Detalle de producto\nScenario: Mostrar reseñas de redes sociales\nGiven estoy en página de producto\nWhen consulto API de reseñas sociales\nThen veo reseñas de redes en la página","def test_social_reviews_load():\n  # Mockea API de reseñas\ndef test_social_reviews_failure():\n  # Verifica manejo de error",13,18
STORY-101,Validación de cantidad en carrito,"Feature: Carrito\nScenario: Sistema valida cantidad de productos\nGiven estoy en el carrito\nWhen ingreso cantidad mayor al stock\nThen veo mensaje de error","def test_quantity_validation():\n  # Verifica error por cantidad\ndef test_valid_quantity_update():\n  # Verifica éxito",3,4
STORY-102,Eliminar cuenta de administrador,"Feature: Gestión usuarios\nScenario: Superadmin elimina cuenta admin\nGiven estoy en panel de usuarios como superadmin\nWhen elimino cuenta de admin\nThen la cuenta se marca como eliminada","def test_delete_admin_success():\n  # Verifica eliminación\ndef test_delete_admin_authorization():\n  # Verifica permisos",8,10
STORY-103,Generar reporte de ingresos por categoría,"Feature: Reportes admin\nScenario: Admin ve ingresos por categoría\nGiven estoy en panel de reportes\nWhen selecciono ""Ingresos por categoría""\nThen se descarga archivo ""ingresos_categoria.csv""","def test_category_revenue_report():\n  # Verifica archivo generado\ndef test_report_data_accuracy():\n  # Verifica datos correctos",8,12
STORY-104,Agregar producto a promoción,"Feature: Panel admin\nScenario: Admin añade producto a promoción\nGiven estoy en panel de promociones\nWhen asocio producto a promoción\nThen el producto aparece en la promoción","def test_add_to_promotion_success():\n  # Verifica asignación\ndef test_promotion_validation():\n  # Verifica promoción inválida",5,6
STORY-105,Notificación de cambio de estado de pedido,"Feature: Notificaciones\nScenario: Usuario recibe alerta de estado\nGiven mi pedido cambia de estado\nWhen el sistema procesa el cambio\nThen recibo notificación por email","def test_order_status_notification():\n  # Mockea envío de email\ndef test_notification_content():\n  # Verifica contenido",8,10
STORY-106,Ver historial de notificaciones,"Feature: Notificaciones\nScenario: Usuario revisa historial de notificaciones\nGiven estoy en el panel de notificaciones\nWhen selecciono ""Ver historial""\nThen veo lista de notificaciones pasadas","def test_notification_history_load():\n  # Verifica carga de historial\ndef test_history_pagination():\n  # Verifica paginación",5,8
STORY-107,Integración con API de seguimiento de envíos,"Feature: Seguimiento de pedidos\nScenario: Usuario rastrea pedido\nGiven estoy en detalles de pedido\nWhen consulto seguimiento\nThen veo estado actual vía API","def test_tracking_api_load():\n  # Mockea API de seguimiento\ndef test_tracking_api_failure():\n  # Verifica manejo de error",13,18
STORY-108,Validación de formato de teléfono,"Feature: Perfil\nScenario: Usuario ingresa teléfono inválido\nGiven estoy en edición de perfil\nWhen ingreso número inválido\nThen veo mensaje de error","def test_invalid_phone_validation():\n  # Verifica error\ndef test_valid_phone_submission():\n  # Verifica éxito",3,4
STORY-109,Filtrar productos por rango de descuento,"Feature: Lista de productos\nScenario: Usuario filtra por descuento\nGiven estoy en lista de productos\nWhen selecciono ""Descuentos 20-50%""\nThen veo productos con descuento en rango","def test_discount_filter_applied():\n  # Verifica filtro aplicado\ndef test_empty_discount_filter():\n  # Verifica mensaje sin resultados",5,6
STORY-110,Generar reporte de usuarios inactivos,"Feature: Reportes admin\nScenario: Admin ve usuarios inactivos\nGiven estoy en panel de reportes\nWhen selecciono ""Usuarios inactivos""\nThen se descarga archivo ""usuarios_inactivos.csv""","def test_inactive_users_report():\n  # Verifica archivo generado\ndef test_report_data_accuracy():\n  # Verifica datos correctos",8,12
STORY-111,Agregar comentario a pedido,"Feature: Detalle de pedido\nScenario: Usuario agrega comentario\nGiven estoy en detalles de pedido\nWhen ingreso comentario y envío\nThen el comentario se guarda","def test_add_order_comment():\n  # Verifica guardado de comentario\ndef test_empty_comment_validation():\n  # Verifica error si vacío",5,7
STORY-112,Notificación push de nuevo comentario,"Feature: Notificaciones\nScenario: Admin recibe alerta de comentario\nGiven un usuario agrega comentario\nWhen el comentario se guarda\nThen admin recibe notificación push","def test_comment_notification_sent():\n  # Mockea notificación\ndef test_notification_content():\n  # Verifica contenido",8,10
STORY-113,Exportar comentarios a CSV,"Feature: Detalle de producto\nScenario: Admin exporta comentarios\nGiven estoy en página de producto\nWhen clico ""Exportar comentarios""\nThen se descarga archivo ""comentarios.csv""","def test_comments_export_csv():\n  # Verifica archivo generado\ndef test_comments_data_accuracy():\n  # Verifica datos correctos",5,9
STORY-114,Autenticación con código OTP,"Feature: Autenticación\nScenario: Usuario inicia sesión con OTP\nGiven estoy en página de login\nWhen ingreso código OTP válido\nThen se autentica y redirige al dashboard","def test_otp_login_success():\n  # Mockea validación OTP\ndef test_invalid_otp():\n  # Verifica error por OTP inválido",13,18
STORY-115,Ver productos relacionados,"Feature: Detalle de producto\nScenario: Usuario ve productos relacionados\nGiven estoy en página de producto\nWhen navego a ""Productos relacionados""\nThen veo lista de productos similares","def test_related_products_load():\n  # Verifica carga de productos\ndef test_related_products_accuracy():\n  # Verifica relevancia",5,7
STORY-116,Agregar producto a lista compartida,"Feature: Lista de deseos\nScenario: Usuario comparte lista\nGiven estoy en mi lista de deseos\nWhen selecciono ""Compartir lista""\nThen genero enlace para compartir","def test_share_wishlist_link():\n  # Verifica generación de enlace\ndef test_link_access():\n  # Verifica acceso a lista",3,5
STORY-117,Notificación de stock reabastecido,"Feature: Notificaciones\nScenario: Usuario recibe alerta de stock\nGiven estoy suscrito a producto sin stock\nWhen el stock se reabastece\nThen recibo notificación por email","def test_restock_notification_sent():\n  # Mockea envío de email\ndef test_notification_content():\n  # Verifica contenido",8,10
STORY-118,Restringir acceso por IP,"Feature: Seguridad\nScenario: Sistema restringe acceso por IP\nGiven estoy autenticado\nWhen intento acceder desde IP no autorizada\nThen veo error de acceso","def test_ip_restriction():\n  # Verifica restricción por IP\ndef test_authorized_ip_access():\n  # Verifica acceso permitido",8,10
STORY-119,Filtrar pedidos por método de pago,"Feature: Historial de pedidos\nScenario: Admin filtra pedidos por pago\nGiven estoy en panel de pedidos\nWhen selecciono ""Tarjeta de crédito""\nThen veo pedidos con ese método","def test_payment_method_filter():\n  # Verifica filtro aplicado\ndef test_empty_payment_filter():\n  # Verifica mensaje sin resultados",5,6
STORY-120,Integración con API de promociones externas,"Feature: Promociones\nScenario: Mostrar promociones externas\nGiven estoy en página de promociones\nWhen consulto API de promociones\nThen veo promociones externas","def test_promo_api_load():\n  # Mockea API de promociones\ndef test_promo_api_failure():\n  # Verifica manejo de error",13,18
STORY-121,Validación de campos en formulario de contacto,"Feature: Soporte\nScenario: Usuario envía formulario inválido\nGiven estoy en página de contacto\nWhen envío formulario sin datos requeridos\nThen veo mensaje de error","def test_contact_form_validation():\n  # Verifica error\ndef test_valid_contact_submission():\n  # Verifica éxito",3,4
STORY-122,Eliminar comentario de pedido,"Feature: Detalle de pedido\nScenario: Admin elimina comentario\nGiven estoy en detalles de pedido\nWhen elimino un comentario\nThen el comentario desaparece","def test_delete_order_comment():\n  # Verifica eliminación\ndef test_delete_unauthorized():\n  # Verifica error si no autorizado",5,7
STORY-123,Generar reporte de productos más buscados,"Feature: Reportes admin\nScenario: Admin ve productos más buscados\nGiven estoy en panel de reportes\nWhen selecciono ""Productos buscados""\nThen se descarga archivo ""busquedas.csv""","def test_search_report_generation():\n  # Verifica archivo generado\ndef test_report_data_accuracy():\n  # Verifica datos correctos",8,12
STORY-124,Agregar atributo personalizado a producto,"Feature: Panel admin\nScenario: Admin añade atributo\nGiven estoy en edición de producto\nWhen agrego atributo ""Color""\nThen el atributo se asocia al producto","def test_add_attribute_success():\n  # Verifica asignación\ndef test_attribute_validation():\n  # Verifica atributo inválido",5,6
STORY-125,Notificación de sesión expirada,"Feature: Seguridad\nScenario: Sistema notifica sesión expirada\nGiven mi sesión ha expirado\nWhen intento realizar acción\nThen recibo alerta de sesión","def test_session_expired_notification():\n  # Verifica alerta mostrada\ndef test_session_renewal():\n  # Verifica renovación de sesión",5,7
STORY-126,Importar categorías desde CSV,"Feature: Gestión de categorías\nScenario: Admin importa categorías\nGiven estoy en panel de categorías\nWhen subo archivo CSV válido\nThen las categorías se añaden a la BD","def test_import_categories_success():\n  # Verifica importación\ndef test_invalid_categories_csv():\n  # Verifica error por formato",8,12
STORY-127,Ver historial de cambios de usuario,"Feature: Panel admin\nScenario: Admin ve cambios de usuario\nGiven estoy en detalles de usuario\nWhen selecciono ""Historial de cambios""\nThen veo lista de modificaciones","def test_user_history_load():\n  # Verifica carga de historial\ndef test_history_accuracy():\n  # Verifica datos correctos",5,8
STORY-128,Proteger formulario contra XSS,"Feature: Seguridad\nScenario: Sistema previene ataque XSS\nGiven estoy en un formulario\nWhen ingreso script malicioso\nThen el sistema sanitiza la entrada","def test_xss_protection():\n  # Verifica sanitización\ndef test_valid_form_submission():\n  # Verifica éxito",8,10
STORY-129,Filtrar reportes por región,"Feature: Reportes admin\nScenario: Admin filtra reportes por región\nGiven estoy en panel de reportes\nWhen selecciono región ""Latinoamérica""\nThen veo reportes de esa región","def test_region_report_filter():\n  # Verifica filtro aplicado\ndef test_empty_region_filter():\n  # Verifica mensaje sin resultados",5,6
STORY-130,Integración con API de recomendaciones,"Feature: Lista de productos\nScenario: Mostrar recomendaciones dinámicas\nGiven estoy en página de producto\nWhen consulto API de recomendaciones\nThen veo productos recomendados","def test_recommendation_api_load():\n  # Mockea API de recomendaciones\ndef test_recommendation_api_failure():\n  # Verifica manejo de error",13,18
STORY-131,Validación de cupón por usuario,"Feature: Checkout\nScenario: Sistema valida cupón por usuario\nGiven estoy en checkout\nWhen ingreso cupón ya usado\nThen veo mensaje de error","def test_user_coupon_validation():\n  # Verifica error por uso\ndef test_valid_coupon_usage():\n  # Verifica éxito",3,4
STORY-132,Eliminar categoría de producto,"Feature: Panel admin\nScenario: Admin elimina categoría\nGiven estoy en edición de producto\nWhen elimino categoría asociada\nThen la categoría se desasocia","def test_remove_category_success():\n  # Verifica eliminación\ndef test_category_removal_validation():\n  # Verifica categoría no eliminable",5,6
STORY-133,Generar reporte de sesiones activas,"Feature: Reportes admin\nScenario: Admin ve sesiones activas\nGiven estoy en panel de reportes\nWhen selecciono ""Sesiones activas""\nThen se descarga archivo ""sesiones.csv""","def test_sessions_report_generation():\n  # Verifica archivo generado\ndef test_report_data_accuracy():\n  # Verifica datos correctos",8,12
STORY-134,Agregar producto a bundle,"Feature: Panel admin\nScenario: Admin crea bundle de productos\nGiven estoy en panel de productos\nWhen asocio productos a bundle\nThen el bundle se crea","def test_create_bundle_success():\n  # Verifica creación\ndef test_bundle_validation():\n  # Verifica productos inválidos",8,10
STORY-135,Notificación de nuevo usuario registrado,"Feature: Notificaciones\nScenario: Admin recibe alerta de registro\nGiven un usuario se registra\nWhen el registro se completa\nThen admin recibe notificación por email","def test_new_user_notification():\n  # Mockea envío de email\ndef test_notification_content():\n  # Verifica contenido",5,7
STORY-136,Cachear resultados de búsqueda de productos,"Feature: Optimización backend\nScenario: Sistema cachea resultados de búsqueda\nGiven un usuario realiza una búsqueda\nWhen los resultados se generan\nThen el backend guarda resultados en caché","def test_search_cache_hit():\n  # Verifica que se usa caché\ndef test_cache_expiration():\n  # Verifica expiración de caché",8,12
STORY-137,Procesar reembolsos en el servidor,"Feature: Gestión de pagos\nScenario: Sistema procesa reembolso\nGiven un pedido es elegible para reembolso\nWhen el admin solicita reembolso\nThen el backend procesa el reembolso vía API de pagos","def test_refunded_processed():\n  # Mockea API de pagos\ndef test_refunded_error_handling():\n  # Verifica manejo de error",13,20
STORY-138,Validar integridad de datos en importación,"Feature: Gestión de datos\nScenario: Sistema valida archivo CSV importado\nGiven el admin sube un CSV de productos\nWhen el archivo contiene datos inválidos\nThen el backend rechaza la importación con errores","def test_csv_import_validation():\n  # Verifica errores detectados\ndef test_valid_csv_import():\n  # Verifica importación exitosa",8,10
STORY-139,Optimizar consulta de historial de pedidos,"Feature: Optimización backend\nScenario: Sistema optimiza consulta de pedidos\nGiven un usuario accede al historial\nWhen el backend ejecuta la consulta\nThen la respuesta se genera en menos de 1 segundo","def test_order_history_query_performance():\n  # Verifica tiempo de respuesta\ndef test_query_data_accuracy():\n  # Verifica datos correctos",13,18
STORY-140,Implementar webhook para notificaciones externas,"Feature: Integraciones\nScenario: Sistema envía webhook por evento\nGiven ocurre un evento como nuevo pedido\nWhen el backend procesa el evento\nThen se envía un webhook a URL configurada","def test_webhook_sent():\n  # Mockea envío de webhook\ndef test_webhook_failure_handling():\n  # Verifica manejo de error",13,18
STORY-141,Encriptar datos sensibles en BD,"Feature: Seguridad\nScenario: Sistema encripta datos de usuario\nGiven un usuario ingresa datos sensibles\nWhen se guardan en la base de datos\nThen los datos están encriptados","def test_data_encryption():\n  # Verifica datos encriptados\ndef test_decryption_access():\n  # Verifica acceso autorizado",8,12
STORY-142,Procesar pagos recurrentes,"Feature: Pagos\nScenario: Sistema procesa suscripción mensual\nGiven un usuario tiene suscripción activa\nWhen llega la fecha de cobro\nThen el backend procesa pago vía API","def test_recurring_payment_success():\n  # Mockea API de pagos\ndef test_payment_failure_handling():\n  # Verifica error por fondos insuficientes",13,20
STORY-143,Implementar auditoría de cambios en BD,"Feature: Auditoría\nScenario: Sistema registra cambios en productos\nGiven un admin modifica un producto\nWhen el cambio se guarda\nThen el backend registra el cambio en log de auditoría","def test_audit_log_creation():\n  # Verifica log registrado\ndef test_audit_log_accuracy():\n  # Verifica datos correctos",8,10
STORY-144,Validar API key para endpoints protegidos,"Feature: Seguridad\nScenario: Sistema valida API key\nGiven un cliente envía solicitud a endpoint\nWhen la API key es inválida\nThen el backend devuelve error 401","def test_api_key_validation():\n  # Verifica error por key inválida\ndef test_valid_api_key_access():\n  # Verifica acceso autorizado",5,7
STORY-145,Procesar cola de emails asíncrona,"Feature: Notificaciones\nScenario: Sistema envía emails en cola\nGiven un evento genera múltiples emails\nWhen el backend procesa la cola\nThen los emails se envían sin retrasos","def test_email_queue_processing():\n  # Verifica procesamiento asíncrono\ndef test_queue_error_handling():\n  # Verifica manejo de fallos",13,18
STORY-146,Optimizar índices de base de datos,"Feature: Optimización backend\nScenario: Sistema mejora consultas con índices\nGiven el backend ejecuta consulta pesada\nWhen se aplican índices optimizados\nThen la consulta se ejecuta más rápido","def test_indexed_query_performance():\n  # Verifica mejora de rendimiento\ndef test_query_data_accuracy():\n  # Verifica datos correctos",13,18
STORY-147,Implementar rate limiting en API,"Feature: Seguridad\nScenario: Sistema limita solicitudes a API\nGiven un cliente envía múltiples solicitudes\nWhen excede el límite\nThen el backend devuelve error 429","def test_rate_limit_enforcement():\n  # Verifica límite aplicado\ndef test_valid_request_rate():\n  # Verifica solicitudes permitidas",8,10
STORY-148,Sincronizar inventario con API externa,"Feature: Integraciones\nScenario: Sistema sincroniza inventario\nGiven el inventario cambia localmente\nWhen se ejecuta sincronización\nThen el backend actualiza inventario en API externa","def test_inventory_sync_success():\n  # Mockea API externa\ndef test_sync_failure_handling():\n  # Verifica manejo de error",13,20
STORY-149,Validar unicidad de SKU en productos,"Feature: Gestión de productos\nScenario: Sistema valida SKU único\nGiven un admin crea producto con SKU\nWhen el SKU ya existe\nThen el backend devuelve error","def test_sku_uniqueness_validation():\n  # Verifica error por duplicado\ndef test_valid_sku_creation():\n  # Verifica éxito",5,6
STORY-150,Procesar exportación masiva de datos,"Feature: Reportes\nScenario: Sistema exporta datos masivos\nGiven el admin solicita exportación de usuarios\nWhen el backend procesa la solicitud\nThen genera archivo CSV asíncronamente","def test_mass_export_success():\n  # Verifica archivo generado\ndef test_export_performance():\n  # Verifica tiempo razonable",13,18
STORY-151,Implementar soft delete en usuarios,"Feature: Gestión de usuarios\nScenario: Sistema elimina usuario lógicamente\nGiven un admin elimina un usuario\nWhen se ejecuta la eliminación\nThen el usuario se marca como eliminado en BD","def test_soft_delete_user():\n  # Verifica eliminación lógica\ndef test_deleted_user_access():\n  # Verifica acceso restringido",8,10
STORY-152,Integración con API de facturación,"Feature: Facturación\nScenario: Sistema genera factura vía API\nGiven un pedido se completa\nWhen el backend genera factura\nThen se envía factura a API externa","def test_invoice_api_success():\n  # Mockea API de facturación\ndef test_invoice_api_failure():\n  # Verifica manejo de error",13,18
STORY-153,Validar integridad de datos en checkout,"Feature: Checkout\nScenario: Sistema valida datos de pedido\nGiven un usuario completa checkout\nWhen los datos son inconsistentes\nThen el backend rechaza el pedido","def test_checkout_data_validation():\n  # Verifica error por datos\ndef test_valid_checkout_data():\n  # Verifica éxito",5,7
STORY-154,Procesar notificaciones en batch,"Feature: Notificaciones\nScenario: Sistema envía notificaciones masivas\nGiven múltiples usuarios requieren notificaciones\nWhen el backend procesa en batch\nThen las notificaciones se envían correctamente","def test_batch_notification_success():\n  # Verifica envío masivo\ndef test_batch_error_handling():\n  # Verifica manejo de fallos",13,18
STORY-155,Optimizar consultas de reportes,"Feature: Optimización backend\nScenario: Sistema mejora reportes\nGiven el admin solicita reporte pesado\nWhen el backend usa consultas optimizadas\nThen el reporte se genera rápidamente","def test_report_query_performance():\n  # Verifica tiempo de respuesta\ndef test_report_data_accuracy():\n  # Verifica datos correctos",13,18
STORY-156,Implementar backup automático de BD,"Feature: Gestión de datos\nScenario: Sistema realiza backup\nGiven llega el horario programado\nWhen el backend ejecuta backup\nThen se genera copia en almacenamiento seguro","def test_backup_creation():\n  # Verifica backup generado\ndef test_backup_integrity():\n  # Verifica datos completos",8,12
STORY-157,Validar permisos en endpoints de API,"Feature: Seguridad\nScenario: Sistema valida permisos de usuario\nGiven un usuario envía solicitud a endpoint\nWhen no tiene permisos\nThen el backend devuelve error 403","def test_endpoint_permission_validation():\n  # Verifica error por permisos\ndef test_authorized_endpoint_access():\n  # Verifica acceso permitido",5,7
STORY-158,Sincronizar datos de usuarios con CRM,"Feature: Integraciones\nScenario: Sistema sincroniza usuarios\nGiven un usuario se registra\nWhen el backend sincroniza con CRM\nThen los datos se actualizan en CRM","def test_crm_sync_success():\n  # Mockea API de CRM\ndef test_crm_sync_failure():\n  # Verifica manejo de error",13,18
STORY-159,Implementar paginación en API de productos,"Feature: API\nScenario: Sistema pagina resultados de productos\nGiven un cliente solicita lista de productos\nWhen especifica página 2\nThen el backend devuelve productos 21-40","def test_api_pagination():\n  # Verifica resultados paginados\ndef test_pagination_edge_cases():\n  # Verifica páginas vacías",8,10
STORY-160,Procesar descuentos dinámicos en servidor,"Feature: Promociones\nScenario: Sistema aplica descuentos dinámicos\nGiven un producto tiene promoción activa\nWhen el usuario añade al carrito\nThen el backend calcula descuento automáticamente","def test_dynamic_discount_calculation():\n  # Verifica cálculo correcto\ndef test_discount_validation():\n  # Verifica promoción inválida",8,12
STORY-161,Implementar logging de errores críticos,"Feature: Auditoría\nScenario: Sistema registra errores críticos\nGiven ocurre un error en el backend\nWhen el sistema lo detecta\nThen se guarda en log de errores","def test_critical_error_logging():\n  # Verifica log registrado\ndef test_log_accuracy():\n  # Verifica detalles correctos",5,7
STORY-162,Validar formato de imágenes en subida,"Feature: Gestión de productos\nScenario: Sistema valida imágenes\nGiven un admin sube imagen para producto\nWhen el formato es inválido\nThen el backend rechaza la imagen","def test_image_format_validation():\n  # Verifica error por formato\ndef test_valid_image_upload():\n  # Verifica éxito",5,6
STORY-163,Integración con API de análisis de datos,"Feature: Estadísticas\nScenario: Sistema consulta métricas\nGiven el admin solicita estadísticas\nWhen el backend consulta API de análisis\nThen procesa y guarda métricas","def test_analytics_api_integration():\n  # Mockea API de análisis\ndef test_analytics_failure_handling():\n  # Verifica manejo de error",13,18
STORY-164,Optimizar almacenamiento de sesiones,"Feature: Optimización backend\nScenario: Sistema mejora gestión de sesiones\nGiven múltiples usuarios están autenticados\nWhen el backend gestiona sesiones\nThen usa almacenamiento eficiente","def test_session_storage_performance():\n  # Verifica rendimiento\ndef test_session_data_accuracy():\n  # Verifica datos correctos",13,18
STORY-165,Implementar limpieza de datos obsoletos,"Feature: Gestión de datos\nScenario: Sistema elimina datos antiguos\nGiven existen datos obsoletos\nWhen se ejecuta limpieza programada\nThen el backend elimina datos sin afectar operación","def test_data_cleanup_success():\n  # Verifica eliminación\ndef test_cleanup_safety():\n  # Verifica no eliminación de datos activos",8,12
STORY-166,Optimizar consultas de búsqueda full-text,"Feature: Optimización de base de datos\nScenario: Sistema mejora búsqueda de productos\nGiven un usuario realiza búsqueda full-text\nWhen el backend usa índices optimizados\nThen la consulta retorna resultados en menos de 0.5 segundos","def test_fulltext_search_performance():\n  # Verifica tiempo de respuesta\ndef test_search_results_accuracy():\n  # Verifica resultados correctos",13,18
STORY-167,Implementar migración de esquema de usuarios,"Feature: Gestión de base de datos\nScenario: Sistema actualiza esquema de usuarios\nGiven se requiere nueva columna en tabla usuarios\nWhen el backend ejecuta migración\nThen la tabla se actualiza sin pérdida de datos","def test_user_schema_migration():\n  # Verifica migración exitosa\ndef test_data_integrity_post_migration():\n  # Verifica datos preservados",8,12
STORY-168,Validar relaciones de integridad referencial,"Feature: Integridad de datos\nScenario: Sistema valida relaciones en pedidos\nGiven un pedido se asocia a un usuario\nWhen se elimina el usuario\nThen el backend previene eliminación por integridad","def test_referential_integrity_validation():\n  # Verifica error por restricción\ndef test_valid_deletion():\n  # Verifica eliminación permitida",5,7
STORY-169,Implementar particionamiento de tabla de pedidos,"Feature: Optimización de base de datos\nScenario: Sistema particiona tabla de pedidos\nGiven la tabla de pedidos crece significativamente\nWhen el backend aplica particionamiento por fecha\nThen las consultas son más rápidas","def test_partitioned_table_performance():\n  # Verifica mejora de rendimiento\ndef test_partition_data_accuracy():\n  # Verifica datos correctos",13,20
STORY-170,Auditoría de accesos a datos sensibles,"Feature: Seguridad de base de datos\nScenario: Sistema registra accesos a datos\nGiven un admin accede a datos sensibles\nWhen se ejecuta la consulta\nThen el backend registra acceso en log de auditoría","def test_sensitive_data_access_log():\n  # Verifica log registrado\ndef test_log_accuracy():\n  # Verifica detalles correctos",8,10
STORY-171,Implementar replicación de base de datos,"Feature: Gestión de base de datos\nScenario: Sistema replica datos a servidor secundario\nGiven se realiza cambio en base primaria\nWhen el backend sincroniza con réplica\nThen los datos están disponibles en réplica","def test_database_replication_success():\n  # Verifica sincronización\ndef test_replication_failure_handling():\n  # Verifica manejo de error",13,20
STORY-172,Validar formato de datos en importación masiva,"Feature: Gestión de datos\nScenario: Sistema valida importación de usuarios\nGiven el admin sube CSV con usuarios\nWhen los datos tienen formato inválido\nThen el backend rechaza con errores específicos","def test_mass_import_validation():\n  # Verifica errores detectados\ndef test_valid_mass_import():\n  # Verifica importación exitosa",8,10
STORY-173,Optimizar consultas de reportes de ventas,"Feature: Optimización de base de datos\nScenario: Sistema mejora reportes de ventas\nGiven el admin solicita reporte de ventas\nWhen el backend usa consultas optimizadas\nThen el reporte se genera en menos de 2 segundos","def test_sales_report_query_performance():\n  # Verifica tiempo de respuesta\ndef test_report_data_accuracy():\n  # Verifica datos correctos",13,18
STORY-174,Implementar transacciones en checkout,"Feature: Integridad de datos\nScenario: Sistema asegura transacciones en checkout\nGiven un usuario completa checkout\nWhen el backend procesa el pago y pedido\nThen se ejecuta en transacción atómica","def test_checkout_transaction_success():\n  # Verifica commit de transacción\ndef test_transaction_rollback():\n  # Verifica rollback en error",8,12
STORY-175,Encriptar datos de tarjetas en BD,"Feature: Seguridad de base de datos\nScenario: Sistema encripta datos de tarjetas\nGiven un usuario guarda tarjeta\nWhen el backend guarda los datos\nThen los datos están encriptados en BD","def test_card_data_encryption():\n  # Verifica datos encriptados\ndef test_decryption_access():\n  # Verifica acceso autorizado",8,12
STORY-176,Sincronizar datos de inventario en tiempo real,"Feature: Integraciones de base de datos\nScenario: Sistema sincroniza inventario\nGiven el inventario cambia en BD\nWhen se ejecuta sincronización\nThen el backend actualiza sistema externo","def test_inventory_sync_realtime():\n  # Verifica sincronización\ndef test_sync_failure_handling():\n  # Verifica manejo de error",13,18
STORY-177,Implementar limpieza de registros obsoletos,"Feature: Gestión de base de datos\nScenario: Sistema elimina datos antiguos\nGiven existen registros obsoletos\nWhen se ejecuta limpieza programada\nThen el backend elimina registros sin afectar datos activos","def test_obsolete_data_cleanup():\n  # Verifica eliminación\ndef test_cleanup_safety():\n  # Verifica no eliminación de datos activos",8,12
STORY-178,Validar unicidad de email en BD,"Feature: Integridad de datos\nScenario: Sistema valida email único\nGiven un usuario registra email\nWhen el email ya existe\nThen el backend devuelve error","def test_email_uniqueness_validation():\n  # Verifica error por duplicado\ndef test_valid_email_registration():\n  # Verifica éxito",5,6
STORY-179,Optimizar consultas de auditoría,"Feature: Optimización de base de datos\nScenario: Sistema mejora consultas de auditoría\nGiven se accede al log de auditoría\nWhen el backend usa índices optimizados\nThen la consulta retorna en menos de 1 segundo","def test_audit_query_performance():\n  # Verifica tiempo de respuesta\ndef test_audit_data_accuracy():\n  # Verifica datos correctos",13,18
STORY-180,Implementar backup incremental,"Feature: Gestión de base de datos\nScenario: Sistema realiza backup incremental\nGiven existen cambios desde último backup\nWhen el backend ejecuta backup\nThen solo se respaldan datos modificados","def test_incremental_backup_success():\n  # Verifica backup generado\ndef test_backup_integrity():\n  # Verifica datos completos",8,12
STORY-181,Validar constraints en tabla de productos,"Feature: Integridad de datos\nScenario: Sistema valida constraints\nGiven un admin crea producto\nWhen los datos violan constraints\nThen el backend rechaza con error","def test_product_constraints_validation():\n  # Verifica error por constraint\ndef test_valid_product_creation():\n  # Verifica éxito",5,7
STORY-182,Procesar exportación de datos asíncrona,"Feature: Reportes\nScenario: Sistema exporta datos asíncronamente\nGiven el admin solicita exportación masiva\nWhen el backend procesa en fondo\nThen genera archivo CSV y notifica","def test_async_export_success():\n  # Verifica archivo generado\ndef test_async_export_notification():\n  # Verifica notificación",13,18
STORY-183,Implementar sharding de base de datos,"Feature: Escalabilidad\nScenario: Sistema distribuye datos\nGiven la base de datos crece significativamente\nWhen el backend aplica sharding\nThen las consultas se distribuyen entre shards","def test_sharding_performance():\n  # Verifica mejora de rendimiento\ndef test_sharding_data_consistency():\n  # Verifica datos consistentes",21,30
STORY-184,Auditoría de cambios en precios,"Feature: Auditoría de base de datos\nScenario: Sistema registra cambios de precios\nGiven un admin modifica precio de producto\nWhen el cambio se guarda\nThen el backend registra en log de auditoría","def test_price_change_audit():\n  # Verifica log registrado\ndef test_audit_accuracy():\n  # Verifica detalles correctos",5,7
STORY-185,Sincronizar datos de usuarios con API externa,"Feature: Integraciones\nScenario: Sistema sincroniza usuarios\nGiven un usuario actualiza datos\nWhen el backend sincroniza con API\nThen los datos se actualizan en sistema externo","def test_user_sync_success():\n  # Mockea API externa\ndef test_sync_failure_handling():\n  # Verifica manejo de error",13,18
STORY-186,Validar índices en consultas de pedidos,"Feature: Optimización de base de datos\nScenario: Sistema usa índices en pedidos\nGiven se ejecuta consulta de pedidos\nWhen el backend usa índices optimizados\nThen la consulta es más rápida","def test_order_index_performance():\n  # Verifica tiempo de respuesta\ndef test_index_data_accuracy():\n  # Verifica datos correctos",13,18
STORY-187,Implementar transacciones en actualización masiva,"Feature: Integridad de datos\nScenario: Sistema asegura actualizaciones masivas\nGiven el admin actualiza múltiples productos\nWhen se ejecuta la actualización\nThen se realiza en transacción atómica","def test_mass_update_transaction():\n  # Verifica commit de transacción\ndef test_transaction_rollback():\n  # Verifica rollback en error",8,12
STORY-188,Encriptar logs de auditoría,"Feature: Seguridad de base de datos\nScenario: Sistema encripta logs\nGiven se genera un log de auditoría\nWhen el backend guarda el log\nThen el log está encriptado en BD","def test_audit_log_encryption():\n  # Verifica log encriptado\ndef test_log_decryption_access():\n  # Verifica acceso autorizado",8,12
STORY-189,Optimizar consultas de estadísticas de usuarios,"Feature: Optimización de base de datos\nScenario: Sistema mejora estadísticas\nGiven el admin solicita estadísticas de usuarios\nWhen el backend usa consultas optimizadas\nThen el reporte se genera rápidamente","def test_user_stats_query_performance():\n  # Verifica tiempo de respuesta\ndef test_stats_data_accuracy():\n  # Verifica datos correctos",13,18
STORY-190,Implementar restauración de base de datos,"Feature: Gestión de base de datos\nScenario: Sistema restaura datos\nGiven existe un backup reciente\nWhen el admin solicita restauración\nThen el backend restaura datos sin pérdida","def test_database_restore_success():\n  # Verifica restauración\ndef test_restore_data_integrity():\n  # Verifica datos completos",13,20
STORY-191,Validar formato JSON en importación,"Feature: Gestión de datos\nScenario: Sistema valida JSON importado\nGiven el admin sube archivo JSON\nWhen el archivo tiene formato inválido\nThen el backend rechaza con errores","def test_json_import_validation():\n  # Verifica errores detectados\ndef test_valid_json_import():\n  # Verifica importación exitosa",8,10
STORY-192,Procesar limpieza de sesiones caducadas,"Feature: Gestión de base de datos\nScenario: Sistema elimina sesiones antiguas\nGiven existen sesiones caducadas\nWhen se ejecuta limpieza programada\nThen el backend elimina sesiones obsoletas","def test_session_cleanup_success():\n  # Verifica eliminación\ndef test_cleanup_safety():\n  # Verifica no eliminación de sesiones activas",5,7
STORY-193,Implementar vistas materializadas para reportes,"Feature: Optimización de base de datos\nScenario: Sistema usa vistas materializadas\nGiven el admin solicita reporte complejo\nWhen el backend usa vista materializada\nThen el reporte se genera rápidamente","def test_materialized_view_performance():\n  # Verifica tiempo de respuesta\ndef test_view_data_accuracy():\n  # Verifica datos correctos",13,18
STORY-194,Validar integridad en cascada en eliminación,"Feature: Integridad de datos\nScenario: Sistema elimina datos en cascada\nGiven un admin elimina categoría\nWhen se ejecuta eliminación\nThen el backend elimina productos asociados","def test_cascade_deletion_success():\n  # Verifica eliminación en cascada\ndef test_cascade_deletion_safety():\n  # Verifica restricciones",8,10
STORY-195,Integración con base de datos secundaria,"Feature: Escalabilidad\nScenario: Sistema usa BD secundaria para lecturas\nGiven se realiza consulta de lectura\nWhen el backend consulta BD secundaria\nThen la respuesta es rápida y consistente","def test_secondary_db_read():\n  # Verifica consulta en secundaria\ndef test_data_consistency():\n  # Verifica datos consistentes",13,20